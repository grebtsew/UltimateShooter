package Editor;

import java.awt.Point;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

import Enums.Balls;
import Maps.Map;

public class FileEditor {

	int mapnumber = 0;

	Balls[][] ball;
	ArrayList<Point> ballList;

	public FileEditor() {
		getmapnumber();
	}

	private void getmapnumber() {

		// for windows :
		// "C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
		// for linux
		// "/home/daniel/eclipseprojects/UltimateShooter/UltimateShooter/src/Maps/Data/"

		if (mapnumber == 0) {
			File f = new File(
					"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
							+ "MapNumber" + ".ser");
			if (f.exists() && !f.isDirectory()) {

				try {
					FileInputStream fileIn = new FileInputStream(
							"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
									+ "MapNumber" + ".ser");
					ObjectInputStream in = new ObjectInputStream(fileIn);
					mapnumber = (int) in.readObject();
					in.close();
					fileIn.close();
				} catch (IOException i) {

					i.printStackTrace();
					return;
				} catch (ClassNotFoundException c) {
					System.out.println("Map class not found");
					c.printStackTrace();
					return;
				}
			} else {
				try {

					FileOutputStream fileOut = new FileOutputStream(
							"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
									+ "MapNumber" + ".ser");
					ObjectOutputStream out = new ObjectOutputStream(fileOut);
					out.writeObject(mapnumber);
					out.close();
					fileOut.close();
					System.out.printf("Serialized data is saved");
				} catch (IOException i) {
					i.printStackTrace();
				}
			}
		}
	}

	private void editnumber() {

			mapnumber++;
		
		
		try {
			FileOutputStream fileOut = new FileOutputStream(
					"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
							+ "MapNumber" + ".ser");
			ObjectOutputStream out = new ObjectOutputStream(fileOut);
			out.writeObject(mapnumber);
			out.close();
			fileOut.close();
		} catch (IOException i) {
			i.printStackTrace();
		}
	}

	public int getnumber() {
		return mapnumber;
	}

	@SuppressWarnings("unchecked")
	public Map openMap(String name) {
		Balls[][] ball;
		ArrayList<Point> ballList;

		File f = new File(
				"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
						+ name + ".ser");
		if (f.exists() && !f.isDirectory()) {

			try {
				FileInputStream fileIn = new FileInputStream(
						"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
								+ name + ".ser");
				ObjectInputStream in = new ObjectInputStream(fileIn);
				ball = (Balls[][]) in.readObject();
				ballList = (ArrayList<Point>) in.readObject();
				in.close();
				fileIn.close();
			} catch (IOException i) {
				i.printStackTrace();
				return null;
			} catch (ClassNotFoundException c) {
				System.out.println("Map class not found");
				c.printStackTrace();
				return null;
			}

			Map map = new Map(10, 10);
			map.setList(ball, ballList);
			return map;
		}
		return null;
	}

	public void SaveMap(Map map) {

		try {
			FileOutputStream fileOut = new FileOutputStream(
					"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/"
							+ map.name + ".ser");
			ObjectOutputStream out = new ObjectOutputStream(fileOut);
			out.writeObject(map.getMap());
			out.writeObject(map.getBallList());
			out.close();
			fileOut.close();
			System.out.println("Serialized data is saved ");
		} catch (IOException i) {
			i.printStackTrace();
		}
		editnumber();
	}

	public void removeallmaps() {
		File dir = new File(
				"C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/");
		for (File file : dir.listFiles()) {
			file.delete();
		}
		mapnumber = 0;
		getmapnumber();
		
		
	}

	public Map manualopen() {
		 JFileChooser chooser = new JFileChooser();
		    FileNameExtensionFilter filter = new FileNameExtensionFilter(
		        "ser");
		    chooser.setFileFilter(filter);
		    int returnVal = chooser.showOpenDialog("C:/Users/Daniel/Dropbox/Eclipse/ultimateshooter/UltimateShooter/src/Maps/Data/");
		    if(returnVal == JFileChooser.APPROVE_OPTION) {
		       System.out.println("You chose to open this file: " +
		            chooser.getSelectedFile().getName());
		    }
		return new Map(10,10)
	}
}
